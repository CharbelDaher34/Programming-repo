/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Components.Forms;

import Components.Class.Client;
import Components.Class.Helper;
import static Components.Class.Helper.hashString;
import static Components.Class.Helper.isAnyFieldEmpty;

import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import static Components.Main.client;
import static Components.Main.connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

public class CreateProfile extends javax.swing.JFrame {

    /**
     * Creates new form CreateProfile
     */
    public CreateProfile() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.JButton Back = new javax.swing.JButton();
        javax.swing.JLabel jLabel1 = new javax.swing.JLabel();
        firstName = new javax.swing.JTextField();
        javax.swing.JLabel jLabel2 = new javax.swing.JLabel();
        lastName = new javax.swing.JTextField();
        javax.swing.JLabel jLabel3 = new javax.swing.JLabel();
        emailAddress = new javax.swing.JTextField();
        javax.swing.JLabel jLabel4 = new javax.swing.JLabel();
        password = new javax.swing.JTextField();
        javax.swing.JLabel jLabel5 = new javax.swing.JLabel();
        passportNb = new javax.swing.JTextField();
        javax.swing.JLabel jLabel6 = new javax.swing.JLabel();
        tel = new javax.swing.JTextField();
        javax.swing.JLabel jLabel7 = new javax.swing.JLabel();
        javax.swing.JButton create = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setName("Form"); // NOI18N

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("Components/Forms/Bundle"); // NOI18N
        Back.setText(bundle.getString("CreateProfile.Back.text")); // NOI18N
        Back.setName("Back"); // NOI18N
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });

        jLabel1.setText(bundle.getString("CreateProfile.jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        firstName.setText(bundle.getString("CreateProfile.firstName.text")); // NOI18N
        firstName.setName("firstName"); // NOI18N

        jLabel2.setText(bundle.getString("CreateProfile.jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        lastName.setText(bundle.getString("CreateProfile.lastName.text")); // NOI18N
        lastName.setName("lastName"); // NOI18N

        jLabel3.setText(bundle.getString("CreateProfile.jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        emailAddress.setText(bundle.getString("CreateProfile.emailAddress.text")); // NOI18N
        emailAddress.setName("emailAddress"); // NOI18N

        jLabel4.setText(bundle.getString("CreateProfile.jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        password.setText(bundle.getString("CreateProfile.password.text")); // NOI18N
        password.setName("password"); // NOI18N
        password.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordActionPerformed(evt);
            }
        });

        jLabel5.setText(bundle.getString("CreateProfile.jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N

        passportNb.setText(bundle.getString("CreateProfile.passportNb.text")); // NOI18N
        passportNb.setName("passportNb"); // NOI18N

        jLabel6.setText(bundle.getString("CreateProfile.jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N

        tel.setText(bundle.getString("CreateProfile.tel.text")); // NOI18N
        tel.setName("tel"); // NOI18N

        jLabel7.setText(bundle.getString("CreateProfile.jLabel7.text")); // NOI18N
        jLabel7.setName("jLabel7"); // NOI18N

        create.setText(bundle.getString("CreateProfile.create.text")); // NOI18N
        create.setName("create"); // NOI18N
        create.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Back)
                .addGap(34, 34, 34))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(180, 180, 180)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(tel)
                                        .addComponent(passportNb, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(password, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(emailAddress, javax.swing.GroupLayout.Alignment.TRAILING))
                                    .addComponent(firstName, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(lastName, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 186, Short.MAX_VALUE)
                                .addComponent(create))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(53, 53, 53))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {emailAddress, firstName, lastName, passportNb, password, tel});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(create))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emailAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passportNb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Back)
                .addGap(30, 30, 30))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {emailAddress, firstName, lastName, passportNb, password, tel});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        Helper.clearForm(this.getContentPane());
        CheckExistence CheckExistenceFrm = new CheckExistence();

        CheckExistenceFrm.show();
        dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_BackActionPerformed

    private void createActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createActionPerformed

        if (isAnyFieldEmpty(emailAddress, firstName, lastName, passportNb, password, tel)) {
            JOptionPane.showMessageDialog(null, "Enter the missing values!");
            return;
        }
        PreparedStatement preparedStatement = null;
        try {
            // Get the text from each JTextField and save it in corresponding variables
            //check if the email exists in the database
            String emailAddressText = emailAddress.getText();
            String existQuery = "SELECT COUNT(*) FROM client WHERE emailAddress=?";
            preparedStatement = connection.prepareStatement(existQuery);
            preparedStatement.setString(1, emailAddressText);
            ResultSet resultSet = preparedStatement.executeQuery();
            int count = 0;
            if (resultSet.next()) {
                count = resultSet.getInt(1);
            }
            if (count != 0) {
                emailAddress.setText("");
                JOptionPane.showMessageDialog(null, "The email already exists, enter another one!");
                return;

            }

            String firstNameText = firstName.getText();
            String lastNameText = lastName.getText();
            //CHeck if the passportnb exists in the database because it is unique
            String passportNbText = passportNb.getText();
            existQuery = "SELECT COUNT(*) FROM client WHERE passportNb=?";
            preparedStatement = connection.prepareStatement(existQuery);
            preparedStatement.setString(1, passportNbText);
            resultSet = preparedStatement.executeQuery();
            count = 0;
            if (resultSet.next()) {
                count = resultSet.getInt(1);
            }
            if (count != 0) {
                passportNb.setText("");
                JOptionPane.showMessageDialog(null, "The passport number already exists, check your government!");
                return;

            }
            String passwordText = password.getText();
            String hashed = hashString(passwordText, "SHA-256");
            String telText = tel.getText();
            //checks the number if it is numbers and size=8, and check the existence of it in the database
            if (!telText.matches("\\d+")) {
                tel.setText("");
                JOptionPane.showMessageDialog(null, "Enter a valid number!");
                return;
            }
            if (telText.length() != 8) {
                tel.setText("");
                JOptionPane.showMessageDialog(null, "Enter a number of 8 digits!");
                return;
            }
            existQuery = "SELECT COUNT(*) FROM client WHERE tel=?";
            preparedStatement = connection.prepareStatement(existQuery);
            preparedStatement.setString(1, telText);
            resultSet = preparedStatement.executeQuery();
            count = 0;
            if (resultSet.next()) {
                count = resultSet.getInt(1);
            }
            if (count != 0) {
                tel.setText("");
                JOptionPane.showMessageDialog(null, "Someone Stole your Phone!");
                return;

            }
            //all is good insert it in the database
            String insertQuery = "INSERT INTO client (passportNb, firstName, lastName, password, tel, emailAddress) "
                    + "VALUES (?, ?, ?, ?, ?, ?);";

            // Prepare the statement and set the values for each parameter
            preparedStatement = connection.prepareStatement(insertQuery);
            preparedStatement.setString(1, passportNbText);
            preparedStatement.setString(2, firstNameText);
            preparedStatement.setString(3, lastNameText);
            preparedStatement.setString(4, hashed);
            preparedStatement.setString(5, telText);
            preparedStatement.setString(6, emailAddressText);

            // Execute the query
            int rowsAffected = preparedStatement.executeUpdate();
            System.out.println("Account Added Successfully!");

            String clientQuery = "SELECT ID FROM client "
                    + "WHERE emailAddress = ? AND password = ?";
            preparedStatement = connection.prepareStatement(clientQuery);
            preparedStatement.setString(1, emailAddressText);
            preparedStatement.setString(2, hashed);
            ResultSet clientResult = preparedStatement.executeQuery();
            if (clientResult.next()) {
                int ID = clientResult.getInt("ID");
                client = new Client(passportNbText, ID, firstNameText, lastNameText, hashed, telText);
                Helper.clearForm(this.getContentPane());
                dispose();
                User UserFrm=new User();
                UserFrm.show();                // Rest of your code...
            } else {
                Helper.clearForm(this.getContentPane());
            }

        } catch (SQLException ex) {
            Logger.getLogger(CreateProfile.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
        }


    }//GEN-LAST:event_createActionPerformed

    private void passwordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CreateProfile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CreateProfile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CreateProfile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CreateProfile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CreateProfile().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextField emailAddress;
    public javax.swing.JTextField firstName;
    public javax.swing.JTextField lastName;
    public javax.swing.JTextField passportNb;
    public javax.swing.JTextField password;
    public javax.swing.JTextField tel;
    // End of variables declaration//GEN-END:variables
}
