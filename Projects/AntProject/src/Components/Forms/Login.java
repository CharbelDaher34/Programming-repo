/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Components.Forms;

import Components.Class.Client;
import Components.Class.Helper;
import static Components.Class.Helper.hashString;
import java.sql.*;
import static Components.Main.client;

import static Components.Main.connection;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;

/**
 *
 * @author user
 */
public class Login extends javax.swing.JFrame {

    /**
     * Creates new form Login
     */
    public Login() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.JButton Back = new javax.swing.JButton();
        javax.swing.JLabel jLabel1 = new javax.swing.JLabel();
        emailAddress = new javax.swing.JTextField();
        javax.swing.JLabel jLabel2 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel3 = new javax.swing.JLabel();
        passwordBox = new javax.swing.JTextField();
        javax.swing.JButton login = new javax.swing.JButton();
        javax.swing.JLabel jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setName("Form"); // NOI18N

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("Components/Forms/Bundle"); // NOI18N
        Back.setText(bundle.getString("Login.Back.text")); // NOI18N
        Back.setName("Back"); // NOI18N
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });

        jLabel1.setText(bundle.getString("Login.jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        emailAddress.setText(bundle.getString("Login.emailAddress.text")); // NOI18N
        emailAddress.setName("emailAddress"); // NOI18N
        emailAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailAddressActionPerformed(evt);
            }
        });

        jLabel2.setText(bundle.getString("Login.jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jLabel3.setText(bundle.getString("Login.jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        passwordBox.setText(bundle.getString("Login.passwordBox.text")); // NOI18N
        passwordBox.setName("passwordBox"); // NOI18N

        login.setText(bundle.getString("Login.login.text")); // NOI18N
        login.setName("login"); // NOI18N
        login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginActionPerformed(evt);
            }
        });

        jLabel4.setText(bundle.getString("Login.jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(Back))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(passwordBox, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(112, 185, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(login)
                                .addGap(49, 49, 49)
                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(emailAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(168, 168, 168)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emailAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(passwordBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(login)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addComponent(Back)
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        client = new Client();
        CheckExistence CheckExistenceFrm = new CheckExistence();
        Helper.clearForm(this.getContentPane());
        dispose();
        CheckExistenceFrm.show();

    }//GEN-LAST:event_BackActionPerformed

    private void emailAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailAddressActionPerformed
//This code implements a login functionality for a Java Swing application. It checks the provided email and password in the "client" table. If there's a match, it retrieves client info and checks if the same login exists in the "admin" table. Depending on the user's choice (admin or regular), it displays the corresponding frame. If no match or errors occur, appropriate messages are shown.
    private void loginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginActionPerformed

        String email = emailAddress.getText();
        String password = hashString(passwordBox.getText(), "SHA-256");

        try {
            // Check if the login exists in the 'client' table
            String clientQuery = "SELECT passportNb, ID, firstName, lastName, password, tel FROM client "
                    + "WHERE emailAddress = ? AND password = ?";
            PreparedStatement clientStatement = connection.prepareStatement(clientQuery);
            clientStatement.setString(1, email);
            clientStatement.setString(2, password);
            ResultSet clientResult = clientStatement.executeQuery();

            if (clientResult.next()) {
                // Client login found, store client information
                String passportNb = clientResult.getString("passportNb");
                int ID = clientResult.getInt("ID");
                String firstName = clientResult.getString("firstName");
                String lastName = clientResult.getString("lastName");
                String tel = clientResult.getString("tel");
                client = new Client(passportNb, ID, firstName, lastName, password, tel);

                // Check if the login exists in the 'admin' table
                String adminQuery = "SELECT COUNT(*) FROM admin WHERE emailAddress = ? AND password = ?";
                PreparedStatement adminStatement = connection.prepareStatement(adminQuery);
                adminStatement.setString(1, email);
                adminStatement.setString(2, password);
                ResultSet adminResult = adminStatement.executeQuery();
                adminResult.next();
                int count = adminResult.getInt(1);
                boolean isAdmin = count > 0;

                // Show appropriate frame based on user's choice
                if (isAdmin) {
                    // User chose 'Yes', show admin frame
                    if (JOptionPane.showConfirmDialog(null, "Wanna enter as admin?", "Confirmation", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                        Helper.clearForm(this.getContentPane());
                        dispose();
                        Admin AdminFrm = new Admin();

                        AdminFrm.updateDb();
                        AdminFrm.show();
                    } else {
                        // User chose 'No' or no entry found in 'admin', show user frame
                        Helper.storeExistingReservedSeats();

                        Helper.clearForm(this.getContentPane());
                        User UserFrm = new User();

                        UserFrm.fillComboBox();
                        UserFrm.updateDb();
                        dispose();
                        UserFrm.show();
                    }

                } else {
                    // User chose 'No' or no entry found in 'admin', show user frame
                    Helper.clearForm(this.getContentPane());
                    User UserFrm = new User();

                    dispose();
                    UserFrm.show();
                }
            } else {
                // No entry found in 'client', show error message
                JOptionPane.showMessageDialog(null, "Wrong Input!");
                Helper.clearForm(this.getContentPane());
            }
        } catch (SQLException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_loginActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextField emailAddress;
    public javax.swing.JTextField passwordBox;
    // End of variables declaration//GEN-END:variables

}
