/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Components.Forms;

import Components.Class.Helper;
import static Components.Main.connection;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author user
 */
public class editReservation extends javax.swing.JFrame {

    /**
     * Creates new form editReservation
     */
    public editReservation() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.JScrollPane jScrollPane1 = new javax.swing.JScrollPane();
        reservationTable = new javax.swing.JTable();
        javax.swing.JButton back = new javax.swing.JButton();
        javax.swing.JButton delete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setName("Form"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        reservationTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        reservationTable.setName("reservationTable"); // NOI18N
        reservationTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                reservationTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(reservationTable);

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("Components/Forms/Bundle"); // NOI18N
        back.setText(bundle.getString("editReservation.back.text")); // NOI18N
        back.setName("back"); // NOI18N
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        delete.setText(bundle.getString("editReservation.delete.text")); // NOI18N
        delete.setName("delete"); // NOI18N
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(208, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(delete)
                        .addGap(196, 196, 196)
                        .addComponent(back)
                        .addGap(248, 248, 248))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(97, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(back)
                    .addComponent(delete))
                .addGap(84, 84, 84)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
public void refreshReservationTable() {
        try {
            Statement statement = connection.createStatement();

            String sqlQuery = "SELECT c.firstName, c.lastName,c.ID, r.seatNo, s.flightNo "
                    + "FROM reservation r "
                    + "JOIN seat s ON r.seatNo = s.seatNo "
                    + "JOIN client c ON r.client_id = c.ID";

            ResultSet resultSet = statement.executeQuery(sqlQuery);
            String[] columnNames = {"First Name", "Last Name", "ID", "Seat No", "Flight No"};
            DefaultTableModel tableModel = new DefaultTableModel(columnNames, 0);

            // Populate the table model with data from the resultSet
            while (resultSet.next()) {
                String firstName = resultSet.getString("firstName");
                String lastName = resultSet.getString("lastName");
                int ID = resultSet.getInt("ID");
                String seatNo = resultSet.getString("seatNo");
                int flightNo = resultSet.getInt("flightNo");

                // Add the data as a row to the table model
                tableModel.addRow(new Object[]{firstName, lastName, ID, seatNo, flightNo});
            }
            reservationTable.setModel(tableModel);

        } catch (SQLException ex) {
            Logger.getLogger(editReservation.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        Helper.clearForm(this.getContentPane());
        dispose();
        Admin AdminFrm=new Admin();
        AdminFrm.show();// TODO add your handling code here:
    }//GEN-LAST:event_backActionPerformed
    private String selectedSeatNo;
    private int selectedID;
    private void reservationTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reservationTableMouseClicked
        int selectedRow = reservationTable.getSelectedRow();
        if (selectedRow >= 0) { // Make sure a row is selected
            selectedSeatNo = reservationTable.getValueAt(selectedRow, 3).toString();
            selectedID = Integer.parseInt(reservationTable.getValueAt(selectedRow, 2).toString());
            // The indexes 2 and 3 correspond to "ID" and "Seat No" columns in the JTable.
        }
    }//GEN-LAST:event_reservationTableMouseClicked

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        try {
            String deleteQuery = "DELETE FROM reservation WHERE seatNo = ? AND client_id = ?";
            PreparedStatement deleteStatement = connection.prepareStatement(deleteQuery);
            deleteStatement.setString(1, selectedSeatNo);
            deleteStatement.setInt(2, selectedID);

            int rowsAffected = deleteStatement.executeUpdate();
            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(null, "Row deleted successfully.");
                // Update the JTable or other UI components after the delete operation if needed.
                refreshReservationTable();
            } else {
                JOptionPane.showMessageDialog(null, "No matching rows found for deletion.");
            }
//            User UserFrm=new User();
//            UserFrm.updateDb();
//            UserFrm.fillComboBox();
        } catch (SQLException ex) {
            ex.printStackTrace();
            // Handle the SQLException appropriately, such as showing an error message to the user.
            // Example: JOptionPane.showMessageDialog(null, "An error occurred while deleting the row.");
        } // TODO add your handling code here:
    }//GEN-LAST:event_deleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(editReservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(editReservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(editReservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(editReservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new editReservation().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JTable reservationTable;
    // End of variables declaration//GEN-END:variables
}
